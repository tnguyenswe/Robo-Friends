{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","console","log","length","filteredRobots","filter","robot","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAgBeA,EAdF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAE5B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAG,+BAA0BF,EAA1B,gBAA4CG,IAAI,WACxD,gCACA,6BAAKL,IACL,4BAAIC,WCeQK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,8BAGCA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACA,cAAC,EAAD,CAEAR,GAAKK,EAAOG,GAAGR,GACfF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCGMC,EAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,8BACC,uBACAC,KAAK,SACLC,YAAY,gBACZZ,UAAU,mCACVa,SAAUH,OCEEI,G,MATA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,SAA1C,SAECH,EAAMI,aCiDMC,E,kDA/Cd,aAAe,IAAD,8BACb,gBAeDC,eAAiB,SAACC,GAEjB,EAAKC,SAAS,CAAEd,YAAaa,EAAME,OAAOC,SAhB1C,EAAKC,MAAQ,CACZtB,OAAQ,GACRK,YAAa,IAJD,E,gEAQM,IAAD,OAElBkB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAEnB,OAAQ2B,S,+BAYhC,IAAD,EACwBC,KAAKN,MAA5BtB,EADD,EACCA,OAAQK,EADT,EACSA,YAGhB,GADAwB,QAAQC,IAAI,UACU,IAAlB9B,EAAO+B,OACV,OAAO,yCAEP,IAAMC,EAAiBJ,KAAKN,MAAMtB,OAAOiC,QAAO,SAAAC,GAC/C,OAAOA,EAAMzC,KAAK0C,cAAcC,SAAS/B,EAAY8B,kBAEtD,OACA,sBAAKvC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcsB,KAAKX,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUjB,OAAQgC,a,GAxCJK,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.58c1c530.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n\t//const { name, email } = props;\n\treturn(\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img src={`https://robohash.org/${id}test?200x200`} alt='robots'/>\n\t\t\t<div>\n\t\t\t<h2>{name}</h2>\n\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\n\t\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\n\nconst CardList = ({ robots }) => {\n\treturn (\n\t\t<div>\n\t\t{\n\t\t\t//For loop\n\t\t\trobots.map((user, i) => {\n\t\t\t\treturn(  \n\t\t\t\t<Card \n\t\t\t\tkey={i} \n\t\t\t\tid={ robots[i].id } \n\t\t\t\tname={robots[i].name} \n\t\t\t\temail={robots[i].email}/>\n\t\t\t\t);\n\t\t\t})\n\t\t}\n\t\t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n\treturn(\n\t\t<div>\n\t\t\t<input \n\t\t\ttype='search' \n\t\t\tplaceholder=\"search robots\"\n\t\t\tclassName=\"pa3 ba b--green bg-lightest-blue\"\n\t\t\tonChange={searchChange}/>\n\t\t</div>\n\n\t\t);\n\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn(\n\t\t<div style={{overflowY: 'scroll', height: '800px'}}>\n\n\t\t{props.children}\n\t\t</div>\n\t\t);\n};\n\nexport default Scroll;","import React from 'react';\nimport CardList from '../components/CardList';\nimport { robots } from '../robots';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\n\nclass App extends React.Component{\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\t\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({ robots: users }));\n\n\t}\n\n\tonSearchChange = (event) => {\n\t\t//console.log(event.target.value);\n\t\tthis.setState({ searchfield: event.target.value })\n\n\t\t//console.log(filteredRobots);\n\n\t}\n\n\trender(){\n\t\tconst { robots, searchfield} = this.state;\n\n\t\tconsole.log(\"render\");\n\t\tif (robots.length === 0){\n\t\t\treturn <h1>Loading</h1>\n\t\t} else{\n\t\t\tconst filteredRobots = this.state.robots.filter(robot => {\n\t\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t\t})\n\t\t\treturn(\n\t\t\t<div className=\"tc\">\n\t\t\t\t<h1 className=\"f1\">RoboFriends</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t\t);\n\t\t}\n}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Card from './Card';\nimport App from './containers/App';\nimport CardList from './components/CardList';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n//import { robots } from './robots';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}